---
- name: Install MySQL packages
  apt: name={{ mysql_packages }} state=present update_cache=yes

- name: Copy mysqld.cnf file
  template: src=my.cnf.j2 dest={{ mysql_conf_dir }}/my.cnf
  notify: restart mysql 

- name: Start MySQL Service
  service: name={{ mysql_service }} state=started enabled=yes

- name: Copy .my.cnf file with root password credentials
  template: src=root.cnf.j2 dest=~/.my.cnf mode=0600

- name: Update MySQL for all hosts root password for all root accounts
  mysql_user:
      name: root
      password: "{{ mysql_root_db_pass }}"
      host: "{{ item }}"
  with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost
  when: ansible_hostname != 'localhost'

- name: Update MySQL for localhost root password for all root accounts
  mysql_user:
      name: root
      password: "{{ mysql_root_db_pass }}"
      host: "{{ item }}"
  with_items:
      - 127.0.0.1
      - ::1
      - localhost
  when: ansible_hostname == 'localhost'

- name: Create root config directory
  file:
    path: "{{ mysql_conf_dir }}/root"
    state: directory
    owner: root
    group: root

# - name: Copy .my.cnf file with root password credentials
#   template:
#     src: root.cnf.j2
#     dest: "{{ mysql_conf_dir }}/root/.my.cnf"
#     mode: 0600
#   notify: restart mysql

- name: Ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
    - localhost
    - "{{ ansible_hostname }}"

- name: Remove test database
  mysql_db:
    name: test
    state: absent

- name: Create databases
  mysql_db: name={{item.name}} state=present
  with_items: "{{ mysql_db }}"
  when: mysql_db|lower() != 'none'

- name: Create database users
  mysql_user: 
    name={{ item.name }} 
    password={{ item.pass }} 
    priv={{ item.priv }} 
    state=present
    host=%
  with_items: "{{ mysql_users }}"
